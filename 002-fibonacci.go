// Each new term in the Fibonacci sequence is generated by adding the previous
// two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not
// exceed four million, find the sum of the even-valued terms.
package main

import (
	"fmt"

	"./util"
)

func evenFibonacciNumbersBelow(roof int) (evens []int) {
	fib := util.Fibonacci()
	for {
		num := fib()
		if num > roof {
			break
		}
		if num%2 == 0 {
			evens = append(evens, num)
		}
	}
	return evens
}

func main() {
	fmt.Println(util.Sum(evenFibonacciNumbersBelow(4000000)))
}
